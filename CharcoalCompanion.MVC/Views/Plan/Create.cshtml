@model CharcoalCompanion.Models.Plans.PlanCreate

@{
    ViewBag.Title = "Create Plan";
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
}

<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script type="text/javascript">
    $(document).on('click', '.image', function () {
        $(this).parent().children(".form-check.form-check-inline").children("input").prop("checked", true);
    })
</script>

<h2>Create a Plan</h2>


@using (Html.BeginForm("Create", "Plan"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <p>Select one of each of these steps and we will put it all together for you!</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group form-row">
            <h5 class="col-12">@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })</h5>
            <div class="col-12">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group form-row">
            <h5 class="col-sm-2">@Html.LabelFor(model => model.StepOneId, htmlAttributes: new { @class = "control-label" })</h5>
            <div class="col-sm-12">
                <div class="row">
                    @foreach (var step in Model.Meats)
                    {
                        <div class="col-lg-3 col-md-4 col-6 text-center">
                            @if (step.ImageLink != null)
                            {
                                <div class="image">
                                    <img src="@Url.Content(step.ImageLink)" class="img img-responsive full-width" alt="@Html.DisplayFor(modelItem => step.ImageLink)">
                                </div>
                            }
                            else
                            {
                                <div class="image missingImageBackground">
                                    <p class="projectVisibleText">No Image</p>
                                </div>
                            }
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(model => model.StepOneId, step.StepId, new { @class = "form-check-input", id = step.Name })
                                @Html.Label(step.Name, new { @class = "form-check-label", @for = step.Name })
                            </div>
                        </div>
                    }
                    @Html.ValidationMessageFor(model => model.StepOneId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <hr />
        <div class="form-group form-row">
            <h5 class="col-sm-2">@Html.LabelFor(model => model.StepTwoId, htmlAttributes: new { @class = "control-label" })</h5>
            <div class="col-sm-12">
                <div class="row">
                    @foreach (var step in Model.Cuts)
                    {
                        <div class="col-lg-3 col-md-4 col-6 text-center">
                            @if (step.ImageLink != null)
                            {
                                <div class="image">
                                    <img src="@Url.Content(step.ImageLink)" class="img img-responsive full-width" alt="@Html.DisplayFor(modelItem => step.ImageLink)">
                                </div>
                            }
                            else
                            {
                                <div class="image missingImageBackground">
                                    <p class="projectVisibleText">No Image</p>
                                </div>
                            }
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(model => model.StepTwoId, step.StepId, new { @class = "form-check-input", id = step.Name })
                                @Html.Label(step.Name, new { @class = "form-check-label", @for = step.Name })
                            </div>
                        </div>
                    }
                    @Html.ValidationMessageFor(model => model.StepTwoId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <hr />
        <div class="form-group form-row">
            <h5 class="col-sm-2">@Html.LabelFor(model => model.StepThreeId, htmlAttributes: new { @class = "control-label" })</h5>
            <div class="col-sm-12">
                <div class="row">
                    @foreach (var step in Model.CharcoalSetups)
                    {
                        <div class="col-lg-3 col-md-4 col-6 text-center">
                            @if (step.ImageLink != null)
                            {
                                <div class="image">
                                    <img src="@Url.Content(step.ImageLink)" class="img img-responsive full-width" alt="@Html.DisplayFor(modelItem => step.ImageLink)">
                                </div>
                            }
                            else
                            {
                                <div class="image missingImageBackground">
                                    <p class="projectVisibleText">No Image</p>
                                </div>
                            }
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(model => model.StepThreeId, step.StepId, new { @class = "form-check-input", id = step.Name })
                                @Html.Label(step.Name, new { @class = "form-check-label", @for = step.Name })
                            </div>
                        </div>
                    }
                    @Html.ValidationMessageFor(model => model.StepTwoId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <hr />
        <div class="form-group form-row">
            <div class="col">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
            <div class="col my-auto text-right">
                @Html.ActionLink("Back to List", "Index", "", new { @class = "btn btn-sm btn-secondary" })
            </div>
        </div>
    </div>
}
