@model CharcoalCompanion.Models.Plans.PlanUpdate

@{
    ViewBag.Title = "Edit Plan";
}

<h2>Edit a Plan</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <p>Make any changes you need to the Plan, or even overhaul it entirely!</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PlanId)

        <div class="form-group form-row">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group form-row">
            @Html.LabelFor(model => model.StepOneId, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @foreach (var step in Model.Meats)
                {
                    <div class="form-check">
                        @Html.RadioButtonFor(model => model.StepOneId, step.StepId, new { htmlAttributes = new { @class = "form-control", id = step.Name } })
                        @Html.Label(step.Name, new { @class = "form-check-label", @for = step.Name })
                    </div>
                }
                @Html.ValidationMessageFor(model => model.StepOneId, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group form-row">
            @Html.LabelFor(model => model.StepTwoId, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @foreach (var step in Model.Cuts)
                {
                    <div class="form-check">
                        @Html.RadioButtonFor(model => model.StepTwoId, step.StepId, new { htmlAttributes = new { @class = "form-control", id = step.Name } })
                        @Html.Label(step.Name, new { @class = "form-check-label", @for = step.Name })
                    </div>
                }
                @Html.ValidationMessageFor(model => model.StepTwoId, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group form-row">
            @Html.LabelFor(model => model.StepThreeId, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @foreach (var step in Model.CharcoalSetups)
                {
                    <div class="form-check">
                        @Html.RadioButtonFor(model => model.StepThreeId, step.StepId, new { htmlAttributes = new { @class = "form-control", id = step.Name } })
                        @Html.Label(step.Name, new { @class = "form-check-label", @for = step.Name })
                    </div>
                }
                @Html.ValidationMessageFor(model => model.StepThreeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group form-row">
            <div class="col-md-offset-2 col-sm-10">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
