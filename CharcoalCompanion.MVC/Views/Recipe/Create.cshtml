@model CharcoalCompanion.Models.Recipes.RecipeCreate

@{
    ViewBag.Title = "Create Recipe";
}

<h2>Create Recipe</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create a Recipe!</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Directions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Directions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Directions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ingredients, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ingredients, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Steps, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Steps, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Steps, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Plans.Count() > 0)
        {
            <div class="form-group  form-row">
                @Html.LabelFor(model => model.PlanId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @foreach (var plan in Model.Plans)
                    {
                        <div class="form-check">
                            @Html.RadioButtonFor(model => model.PlanId, plan.PlanId, new { htmlAttributes = new { @class = "form-control", id = ("Plan" + plan.PlanId) } })
                            @Html.Label(plan.PlanId.ToString(), new { @class = "form-check-label", @for = ("Plan" + plan.PlanId) })
                        </div>
                    }
                    @Html.ValidationMessageFor(model => model.PlanId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
